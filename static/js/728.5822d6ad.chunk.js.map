{"version":3,"file":"static/js/728.5822d6ad.chunk.js","mappings":"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","sources":["webpack://app1/./src/social/components/Users/Users.module.css?56ac","social/components/Users/Paginator.tsx","social/components/Users/UserFunc.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","social/Redux/users-selectors.ts","social/components/Users/UsersContainer.tsx","social/components/hoc/withAuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"image\":\"Users_image__jP+12\",\"pagination\":\"Users_pagination__GlU3m\",\"selected\":\"Users_selected__HJOZZ\"};","import React, { useState } from 'react';\r\nimport style from './Users.module.css';\r\nexport const Paginator = (props: any) => {\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let partionSize = 10;\r\n    let partionCount = Math.ceil(pageCount / partionSize);\r\n    let [positionNumber, setPositionNumber] = useState(1);\r\n    let leftPageNumber = (positionNumber - 1) * partionSize + 1;\r\n    let rightPageNumber = positionNumber * partionSize;\r\n\r\n\r\n    return(\r\n        <div className={style.pagination}>\r\n        {positionNumber > 1 && <button onClick={() => setPositionNumber(positionNumber - 1)}>prev</button>}\r\n        {pages.filter((i:any) => i >= leftPageNumber && i <= rightPageNumber).map((item: any) => <button onClick={() => props.changeCurrentPage(item)} className={props.currentPage === item ? style.selected : ''}>{item}</button>)}\r\n        {partionCount >= positionNumber && <button onClick={() => setPositionNumber(positionNumber + 1)}>next</button>}\r\n    </div>\r\n    );\r\n}","import React from 'react';\r\nimport style from './Users.module.css';\r\nimport photoUser from './../assets/images/users.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { Paginator } from './Paginator';\r\nconst UserFunc = (props: any) => {\r\n    // let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    // let pages = [];\r\n    // for (let i = 1; i <= pageCount; i++) {\r\n    //     pages.push(i);\r\n    // }\r\n    return (\r\n        <div>\r\n            <Paginator {...props} />\r\n            {/* <div className={style.pagination}>\r\n                {pages.map(item => <button onClick={() => props.changeCurrentPage(item)} className={props.currentPage === item ? style.selected : ''}>{item}</button>)}\r\n            </div> */}\r\n            {\r\n                props.persons.map((item: any) => (\r\n                    <div>\r\n                        <span>\r\n                            <div>\r\n                                <Link to={\"/articles/\" + item.id}><img className={style.image} src={item.photos.small !== null ? item.photos.small : photoUser} alt=''/></Link>\r\n                            </div>\r\n                            <div>\r\n                                {item.followed ? <button disabled={props.followingInProgress.some((id: number) => id === item.id)} onClick={() => {\r\n                                    props.isUnFollowingThunk(item.id);\r\n                                    // axios\r\n                                    // .delete(`https://social-network.samuraijs.com/api/1.0/follow/${item.id}`, {withCredentials: true, headers: {\r\n                                    //     'API-KEY': '15325bdc-bc4f-4fed-b921-7b3eac784eff'\r\n                                    // }})\r\n                                    // props.isFollowingInProgress(true, item.id);\r\n                                    // UsersAPI.unFollowUsersAPI(item.id).then(response => {\r\n                                    //     if (response.resultCode === 0) props.isUnFollowed(item.id);\r\n                                    //     props.isFollowingInProgress(false, item.id);\r\n                                    // })\r\n                                }}>Unfollow</button> : <button disabled={props.followingInProgress.some((id: number) => id === item.id)} onClick={() => {\r\n                                    props.isFollowingThunk(item.id);\r\n                                    // axios\r\n                                    // .post(`https://social-network.samuraijs.com/api/1.0/follow/${item.id}`, {}, {withCredentials: true, headers: {\r\n                                    //     'API-KEY': '15325bdc-bc4f-4fed-b921-7b3eac784eff'\r\n                                    // }})\r\n                                    // props.isFollowingInProgress(true, item.id);\r\n                                    // UsersAPI.followUsersAPI(item.id).then(response => {\r\n                                    //     if (response.resultCode === 0) props.isFollowed(item.id);\r\n                                    //     props.isFollowingInProgress(false, item.id);\r\n                                    //     console.log(props);\r\n                                    // })\r\n                                }}>Follow</button>}\r\n                            </div>\r\n                        </span>\r\n                        <span>\r\n                            <span>\r\n                                <div>{item.name}</div>\r\n                                <div>{item.status}</div>\r\n                            </span>\r\n                            <span>\r\n                                {\r\n                                    item.location\r\n                                        ? <div><div>{item.location.city}</div><div>{item.location.county}</div></div>\r\n                                        : ''\r\n                                }\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default UserFunc;","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"reselect\";\r\n\r\nexport const getPersonsSelector = createSelector((state: any) => state.users.persons, (persons: any) => persons);\r\n\r\nexport const getPageSize = (state: any) => {\r\n    return state.users.pageSize;\r\n}\r\nexport const getTotalUserCount = (state: any) => {\r\n    return state.users.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state: any) => {\r\n    return state.users.currentPage;\r\n}\r\nexport const getIsFetching = (state: any) => {\r\n    return state.users.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state: any) => {\r\n    return state.users.followingInProgress;\r\n}\r\n\r\n// export const getPersonsSelector = createSelector([getPersons, getIsFetching], (persons: any, isFetching: boolean) => persons);","import React, { ReactNode } from 'react';\nimport UserFunc from './UserFunc';\nimport { connect } from 'react-redux';\nimport { changeCurrentPageActionCreator, getUsersThunk, isFollowingThunk, isUnFollowingThunk } from '../../Redux/users-reducer';\nimport Preloader from '../common/preloader/Preloader';\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\nimport { compose } from 'redux';\nimport { getCurrentPage, getFollowingInProgress, getPageSize, getPersonsSelector, getTotalUserCount, getIsFetching } from '../../Redux/users-selectors';\n\ntype PropsType = {\n    persons: Array<object>,\n    pageSize: number,\n    totalUsersCount: number,\n    currentPage: number,\n    isFetching: boolean,\n    followingInProgress: boolean,\n    // follow: (userid: number) => object,\n    // unfollow: (userid: number) => object,\n    //setUsers: (users: Array<object>) => void,\n    changeCurrentPage: (currentPage: number) => void,\n    //setTotalUsersCount: (users: number) => void,\n    //isFetchingStatus: (status: boolean) => boolean,\n    // isFollowingInProgress: (status: boolean, userid: number) => object,\n    getUsersThunk: (currentPage: number, pageSize: number) => void,\n    isFollowingThunk: (useid: number) => void,\n    isUnFollowingThunk: (userid: number) => void\n}\n\nclass UsersClass extends React.Component<PropsType> {\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.getUsersThunk(currentPage, pageSize);\n        // this.props.isFetchingStatus(true);\n        // UsersAPI.getUsersAPI(this.props.currentPage, this.props.pageSize)\n        //     .then(response => {\n        //         this.props.isFetchingStatus(false);\n        //         this.props.setUsers(response.items);\n        //         this.props.setTotalUsersCount(response.totalCount);\n        //     });\n        // axios\n        //     .get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`, {withCredentials: true})\n        //     .then(response => {\n        //         this.props.isFetchingStatus(false);\n        //         this.props.setUsers(response.data.items);\n        //         this.props.setTotalUsersCount(response.data.totalCount);\n        //     });\n    }\n    // isFollowed(userid: number) {\n    //     this.props.follow(userid);\n    // }\n    // isUnFollowed(userid: number) {\n    //     this.props.unfollow(userid);\n    // }\n    // isFollowingInProgress(status: boolean, userid: number) {\n    //     this.props.isFollowingInProgress(status, userid);\n    // }\n    changeCurrentPage(currentPage: number) {\n        const {pageSize} = this.props;\n        this.props.changeCurrentPage(currentPage);\n        this.props.getUsersThunk(currentPage, pageSize);\n        // this.props.isFetchingStatus(true);\n        // // axios\n        // //     .get(`https://social-network.samuraijs.com/api/1.0/users?page=${currentPage}&count=${this.props.pageSize}`, { withCredentials: true })\n        //     UsersAPI.getUsersAPI(currentPage, this.props.pageSize).then(response => {\n        //         this.props.isFetchingStatus(false);\n        //         this.props.setUsers(response.items)\n        //     });\n    }\n    render(): ReactNode {\n        return (\n            <>\n            {this.props.isFetching && <Preloader />}\n                <UserFunc persons={this.props.persons} totalUsersCount={this.props.totalUsersCount} pageSize={this.props.pageSize} currentPage={this.props.currentPage} changeCurrentPage={this.changeCurrentPage.bind(this)} isFollowingThunk={this.props.isFollowingThunk}  isUnFollowingThunk={this.props.isUnFollowingThunk} followingInProgress={this.props.followingInProgress} />\n            \n\n                {/* {this.props.isFetching && <Preloader />}\n                <UserFunc persons={this.props.persons} totalUsersCount={this.props.totalUsersCount} pageSize={this.props.pageSize} currentPage={this.props.currentPage} changeCurrentPage={this.changeCurrentPage.bind(this)} isUnFollowed={this.props.} isFollowed={this.isFollowed.bind(this)} isFollowingInProgress={this.isFollowingInProgress.bind(this)} followingInProgress={this.props.followingInProgress} /> */}\n            </>\n        );\n    }\n}\n\n// let mapStateToProps = (state: any) => ({\n//     persons: state.users.persons,\n//     pageSize: state.users.pageSize,\n//     totalUsersCount: state.users.totalUsersCount,\n//     currentPage: state.users.currentPage,\n//     isFetching: state.users.isFetching,\n//     followingInProgress: state.users.followingInProgress\n// });\n\n\nlet mapStateToProps = (state: any) => ({\n    persons: getPersonsSelector(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUserCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n});\n\nlet mapDispatchToProps = (dispatch: any) => ({\n    // follow: (userid: number) => dispatch(followActionCreator(userid)),\n    // unfollow: (userid: number) => dispatch(unfollowActionCreator(userid)),\n    //setUsers: (users: any) => dispatch(setUsersActionCreator(users)),\n    changeCurrentPage: (currentPage: number) => dispatch(changeCurrentPageActionCreator(currentPage)),\n    //setTotalUsersCount: (users: number) => dispatch(setTotalUsersCountActionCreator(users)),\n    //isFetchingStatus: (status: boolean) => dispatch(isFetchingActionCreator(status)),\n    // isFollowingInProgress: (status: boolean, userid: number) => dispatch(followingInProgressActionCreator(status, userid)),\n    getUsersThunk: (currentPage: number, pageSize: number) => dispatch(getUsersThunk(currentPage, pageSize)),\n    isFollowingThunk: (userid: number) => dispatch(isFollowingThunk(userid)),\n    isUnFollowingThunk: (userid: number) => dispatch(isUnFollowingThunk(userid))\n});\n\n// const withRedirectComponent = withAuthRedirect(UsersClass);\n\nconst UsersContainer = compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(UsersClass);\n\n// const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(withRedirectComponent);\n\nexport default UsersContainer;","import React, {ReactNode} from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\ntype PropsType = {\r\n    isAuth?: boolean,\r\n    router?: any,\r\n}\r\nlet mapStateToProps = (state: any) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n    class RedirectComponent extends React.Component<PropsType> {\r\n        render(): ReactNode {\r\n            if (!this.props.isAuth) return(<Navigate replace to=\"/login\" />);\r\n            return(<Component {...this.props} />);\r\n        }\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}\r\n// export const withAuthRedirect = (Component: any) => {\r\n//    const RedirectComponent = (props: any) => {\r\n//     if (props.isAuth) return(<Navigate replace to=\"/login\" />);\r\n//     return(<Component {...props} />);\r\n//    }\r\n//     return RedirectComponent;\r\n// }"],"names":["Paginator","props","pageCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","partionCount","useState","positionNumber","setPositionNumber","leftPageNumber","rightPageNumber","className","style","onClick","filter","map","item","changeCurrentPage","currentPage","persons","to","id","src","photos","small","photoUser","alt","followed","disabled","followingInProgress","some","isUnFollowingThunk","isFollowingThunk","name","status","location","city","county","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","getPersonsSelector","state","users","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersClass","this","getUsersThunk","Preloader","bind","React","compose","connect","dispatch","changeCurrentPageActionCreator","userid","withAuthRedirect","mapStateToProps","isAuth","auth","Component","RedirectComponent","replace"],"sourceRoot":""}