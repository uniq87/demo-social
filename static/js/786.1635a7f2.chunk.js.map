{"version":3,"file":"static/js/786.1635a7f2.chunk.js","mappings":"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","sources":["social/components/Articles/ProfileInfo/ProfileStatusFunction.tsx","social/components/Articles/ProfileInfo/ProfileDataForm.tsx","social/components/Articles/ProfileInfo/ProfileInfo.tsx","social/components/Articles/MyPosts/Comments/Comments.tsx","social/components/Articles/MyPosts/MyPosts.tsx","social/components/Articles/MyPosts/MyPostsContainer.tsx","social/components/Articles/Articles.tsx","social/components/Articles/ArticlesContainer.tsx","social/components/hoc/withAuthRedirect.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateUserStatusThunk } from '../../../Redux/articles-reducer';\r\nfunction ProfileStatusFunction(props: any) {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    let [count, setCount] = useState(0);\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n    const activeEditMode = () => setEditMode(true);\r\n    const deactiveEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatusThunk(status);\r\n    };\r\n    const plusCount = () => setCount(count+=1);\r\n    const munusCount = () => setCount(count-=1);\r\n    const updateStatus = (event: any) => setStatus(event.currentTarget.value);\r\n    return(\r\n        <div>\r\n        {!editMode\r\n        ? <div onDoubleClick={activeEditMode}>Status: {status ? status : 'default'}</div>\r\n        : <div><input onChange={updateStatus} autoFocus={true} onBlur={deactiveEditMode} value={status} /></div>\r\n        }\r\n        <div>Count: {count} <button style={{padding: '5px'}} onClick={plusCount}> + </button><button style={{padding: '5px'}} onClick={munusCount}> - </button></div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default connect(null, {updateUserStatusThunk})(ProfileStatusFunction);","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { requiredField } from '../../../utils/validation/validation';\r\nimport { Input, TextArea } from '../../common/FormControls/FormControls';\r\n\r\nconst createField = (props: any) => (\r\n        <Field component={props.component} validate={props.validate} {...props} />)\r\n\r\nconst ProfileEdit = ({handleSubmit, error, initialValues}: any) => {\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <strong>Full name: </strong>{createField({component: Input, name: 'fullName', placeholder: 'full name:', validate: [requiredField], type: 'text'})}\r\n            <strong>Luking for job: </strong>{createField({component: Input, name: 'lookingForAJob', type: 'checkbox'})}\r\n            <strong>My professional skills: </strong>{createField({component: TextArea, name: 'lookingForAJobDescription'})}\r\n            <strong>About me: </strong>{createField({component: Input, name: 'aboutMe', placeholder: 'about me', validate: [requiredField], type: 'text'})}\r\n            <strong>Contacts: </strong>{Object.keys(initialValues.contacts).map(key => <EditContacts contactName={key} error={error} />)}\r\n            {error && <div style={{background: 'red', color: 'white', fontWeight: 'bold', marginTop: '5px'}}>{error}</div>}\r\n            <button>Save</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst EditContacts = ({contactName, error}: any) => {\r\n    console.log(error);\r\n    return(\r\n        <div>\r\n            <strong>{contactName}: </strong>{createField({component: Input, name: `contacts.${contactName}`, placeholder: contactName, type: 'text'})}\r\n            {/* {error && <div><span style={{background: 'red', color: 'white', fontWeight: 'bold'}}>{error}</span></div>} */}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileDataForm = reduxForm({form: 'profileEdit'})(ProfileEdit);\r\nexport default ProfileDataForm;","import { connect } from 'react-redux';\nimport Preloader from '../../common/preloader/Preloader';\nimport ProfileStatusFunction from './ProfileStatusFunction';\nimport userPhoto from './../../assets/images/users.png';\nimport { useState } from 'react';\nimport ProfileDataForm from './ProfileDataForm';\nconst ProfileInfo = (props: any) => {\n    const [editMode, setEditMode] = useState(false);\n\n    const editModeClick = () => {\n        setEditMode(true);\n    }\n\n    const onMainPhotoSelect = (event: any) => {\n        if (event.target.files.length) {\n            props.savePhoto(event.target.files[0]);\n        }\n    }\n    if (!props.profile) return <Preloader />\n    const onSubmit = (formData: any) => {\n        props.saveProfile(formData).then(() => setEditMode(false));\n    }\n    return (\n        <>\n        {editMode ? <ProfileDataForm initialValues={props.profile} onSubmit={onSubmit} {...props} /> : <ProfileData {...props} onMainPhotoSelect={onMainPhotoSelect} editModeClick={editModeClick}/>}\n        </>\n    );\n}\n\nconst ProfileData = (props: any) => {\n    console.log(props.profile);\n    return(\n        <div>\n             <div><button onClick={props.editModeClick}>Edit form</button></div>\n            {props.profile.photos.small\n                ? <img src={props.profile.photos.small} alt=''/>\n                : <img src={userPhoto} alt=''/>}\n            {props.isOwner\n            ? <div><input type={\"file\"} name=\"file\" onChange={props.onMainPhotoSelect} /></div>\n            : ''\n            }\n            <div className=\"block__content\">\n                <div className=\"block__content_img\">\n                    <img src=\"#\" alt=''/>\n                </div>\n                <div>\n                    {\n                        props.isAuth\n                            ? \"Status: \" + props.profile.aboutMe\n                            : <ProfileStatusFunction {...props} status={props.status} />\n                            // : <ProfileStatus {...props} />\n                    }\n                </div>\n                <div className=\"block__content_info\" style={{ display: 'flex', flexDirection: 'column' }}>\n                    <p>Name:{props.profile.fullName}</p>\n                    <p>Job:{props.profile.lookingForAJob ? \"yes\" : \"no\"}</p>\n                    <p>Address:{props.profile.contacts.github}</p>\n                    <div>Contacts: {Object.keys(props.profile.contacts).map(key => <Contact key={key} contactName={key} contactValue={props.profile.contacts[key]} />)}</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst Contact = ({contactName, contactValue}: any) => {\n    return(<div><b>{contactName}</b>: <span>{contactValue}</span></div>);\n}\n\nlet mapStateToProps = (state: any) => ({\n    status: state.articlesPage.status\n});\nexport default connect(mapStateToProps)(ProfileInfo);","import React from 'react';\nconst Comments = (props: string | any) => {\n    return (\n        <div className=\"block__comments_item\">\n           <p>{props.messages} <span>Likes:{props.like}</span></p>\n        </div>\n    );\n}\n\nexport default Comments;","import React, { ReactNode } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLength, requiredField } from '../../../utils/validation/validation';\nimport { Input } from '../../common/FormControls/FormControls';\nimport Comments from './Comments/Comments';\n\ntype PropsType = {\n    articlesPage: any,\n    addPost: (messageBody: string) => object\n}\n\nclass MyPosts extends React.PureComponent<PropsType> {\n    \n    // shouldComponentUpdate(nextProps: any, nextState: any) {\n    //     return nextProps !== this.props || nextState !== this.state;\n    // }\n    onSubmit(formData: any) {\n        this.props.addPost(formData.messageBody);\n    }\n    getPostData() {\n        return this.props.articlesPage.postData.map((item: any) => <Comments messages={item.messages} key={item.id} like={item.like} />);\n    }\n    render(): ReactNode {\n        // let postElement = this.props.articlesPage.postData.map((item: any) => <Comments messages={item.messages} key={item.id} like={item.like} />);\n    // let postData: any = this.props.articlesPage.postData;\n    // let postElement = postData.map((item: any | string) => <Comments messages={item.messages} key={item.id} like={item.like} />);\n        return(\n            <div className=\"block__posts\">\n            <div><p>POSTS:</p></div>\n            <div className=\"block__comments\">\n                {this.getPostData()}\n            </div>\n            <div className=\"block__posts_input\">\n                <MyPostFormRedux onSubmit={this.onSubmit.bind(this)} />\n\n                {/* <input onChange={onPostChange} ref={newPostElement} type=\"text\" name=\"post\" value={props.newPostText} placeholder=\"Enter you post:\" />\n                <br />\n                <input type=\"submit\" name=\"submit\" value=\"send\" onClick={addPost} /> */}\n            </div>\n        </div>\n        );\n    }\n}\n\n// const MyPosts = React.memo((props: any) => {\n//     let newPostElement: any = React.createRef();\n//     let postData: any = props.articlesPage.postData;\n//     let postElement = postData.map((item: any | string) => <Comments messages={item.messages} key={item.id} like={item.like} />);\n\n//     let addPost = (messageBody: string) => {\n//         props.addPost(messageBody);\n//     }\n//     let onPostChange = () => {\n//         let text = newPostElement.current.value;\n//         props.onPostChange(text);\n//     }\n//     let onSubmit = (formData: any) => {\n//         props.addPost(formData.messageBody);\n//     }\n//     return (\n//         <div className=\"block__posts\">\n//             <div><p>POSTS:</p></div>\n//             <div className=\"block__comments\">\n//                 {postElement}\n//             </div>\n//             <div className=\"block__posts_input\">\n//                 <MyPostFormRedux onSubmit={onSubmit} />\n\n//                 {/* <input onChange={onPostChange} ref={newPostElement} type=\"text\" name=\"post\" value={props.newPostText} placeholder=\"Enter you post:\" />\n//                 <br />\n//                 <input type=\"submit\" name=\"submit\" value=\"send\" onClick={addPost} /> */}\n//             </div>\n//         </div>\n//     );\n// });\n\nconst maxLength10 = maxLength(10);\n\nlet MyPostForm = (props: any) => {\n    return(\n        <form onSubmit={props.handleSubmit}>\n            <Field component={Input} type=\"text\" name={\"messageBody\"} placeholder={\"Enter you post:\"} validate={[requiredField, maxLength10]} />\n                <br />\n                <button>Send</button>\n        </form>\n    );\n}\nconst MyPostFormRedux = reduxForm({form: \"myPost\"})(MyPostForm);\nexport default MyPosts;","import { connect } from 'react-redux';\nimport {addPostActionCreator, onPostChangeActionCreator} from '../../../Redux/articles-reducer';\nimport MyPosts from './MyPosts';\n\nlet mapStateToProps = (state: any) => ({\n    newPostText: state.articlesPage.newPostText,\n    articlesPage: state.articlesPage\n});\nlet mapDispatchToProps = (dispatch: any) => ({\n    addPost: (messageBody: string) => dispatch(addPostActionCreator(messageBody)),\n    onPostChange: (text: any) => dispatch(onPostChangeActionCreator(text))\n});\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n\n\n// const MyPostsContainer = (props: any) => {\n//     let state = props.store.getState();\n//     let addPost = () => {\n//         // props.addPost();\n//         props.store.dispatch(addPostActionCreator());\n//     }\n//     let onPostChange = (text: any) => {\n//         // let text = newPostElement.current.value;\n//         // props.onPostChange(text);\n//         props.store.dispatch(onPostChangeActionCreator(text));\n//     }\n//     return (\n//             <MyPosts newPostText={state.articlesPage.newPostText} onPostChange={onPostChange} addPost={addPost} />\n//     );\n// }","import React from 'react';\n// import Comments from './MyPosts/Comments/Comments';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfoTest from './ProfileInfo/ProfileInfoTest';\n\nconst Articles = (props: any) => {\n    //console.log(props);\n    // let postData = [\n    //     {id: 1, messages: \"Hello, how are you?\", like: \"10\"},\n    //     {id: 2, messages: \"Andrey You The Best\", like: \"20\"},\n    //     {id: 3, messages: \"Learn Programming ReactJs\", like: \"30\"}\n    // ];\n    return (\n        <article>\n            {/* <ProfileInfoTest profile={props.profile} /> */}\n            <ProfileInfo profile={props.profile} isOwner={props.isOwner} savePhoto={props.savePhoto} saveProfile={props.saveProfile} />\n            <MyPostsContainer />\n        </article>\n    );\n}\n\nexport default Articles;","import React, { ReactNode } from 'react';\r\nimport Articles from './Articles';\r\nimport { connect } from 'react-redux';\r\nimport { setUserProfileThunk, setDefaultUseridThunk, getUserStatusThunk, savePhoto, saveProfile } from './../../Redux/articles-reducer';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\ntype PropsType = {\r\n    profile: object,\r\n    userid: number,\r\n    router: any,\r\n    setUserProfileThunk: (userid: number) => object,\r\n    setDefaultUseridThunk: () => object,\r\n    getUserStatusThunk: (userid: number) => object,\r\n    savePhoto: (file: any) => object,\r\n    saveProfile: (profile: any) => object\r\n}\r\nclass ArticlesContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        this.props.setDefaultUseridThunk();\r\n        if (this.props.router.match) {\r\n            this.props.setUserProfileThunk(this.props.router.match.params.userid);\r\n        } else {\r\n            setTimeout(() => {\r\n                this.props.setUserProfileThunk(this.props.userid);\r\n                this.props.getUserStatusThunk(this.props.userid);\r\n            }, 500);\r\n        }\r\n    }\r\n    render(): ReactNode {\r\n        // if (!this.props.isAuth) return(<Navigate replace to=\"/login\" />)\r\n        return (\r\n            <Articles {...this.props} isOwner={this.props.userid} savePhoto={this.props.savePhoto} saveProfile={this.props.saveProfile} />\r\n        );\r\n    }\r\n}\r\n\r\n// let authRedirectComponent = withAuthRedirect(ArticlesContainer);\r\n\r\nlet mapStateToProps = (state: any) => ({\r\n    profile: state.articlesPage.profile,\r\n    userid: state.articlesPage.userid\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfileThunk, setDefaultUseridThunk, getUserStatusThunk, savePhoto, saveProfile}),\r\n    withAuthRedirect\r\n)(ArticlesContainer);\r\n\r\n// export default connect(mapStateToProps, {setUserProfileThunk})(authRedirectComponent);","import React, {ReactNode} from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\ntype PropsType = {\r\n    isAuth?: boolean,\r\n    router?: any,\r\n}\r\nlet mapStateToProps = (state: any) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n    class RedirectComponent extends React.Component<PropsType> {\r\n        render(): ReactNode {\r\n            if (!this.props.isAuth) return(<Navigate replace to=\"/login\" />);\r\n            return(<Component {...this.props} />);\r\n        }\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}\r\n// export const withAuthRedirect = (Component: any) => {\r\n//    const RedirectComponent = (props: any) => {\r\n//     if (props.isAuth) return(<Navigate replace to=\"/login\" />);\r\n//     return(<Component {...props} />);\r\n//    }\r\n//     return RedirectComponent;\r\n// }"],"names":["connect","updateUserStatusThunk","props","useState","editMode","setEditMode","status","setStatus","count","setCount","useEffect","onChange","event","currentTarget","value","autoFocus","onBlur","onDoubleClick","style","padding","onClick","createField","Field","component","validate","EditContacts","contactName","error","console","log","Input","name","placeholder","type","reduxForm","form","handleSubmit","initialValues","onSubmit","requiredField","TextArea","Object","keys","contacts","map","key","background","color","fontWeight","marginTop","ProfileData","profile","editModeClick","photos","small","src","alt","userPhoto","isOwner","onMainPhotoSelect","className","isAuth","aboutMe","display","flexDirection","fullName","lookingForAJob","github","Contact","contactValue","state","articlesPage","Preloader","formData","saveProfile","then","target","files","length","savePhoto","messages","like","MyPosts","this","addPost","messageBody","postData","item","id","getPostData","MyPostFormRedux","bind","React","maxLength10","maxLength","newPostText","dispatch","addPostActionCreator","onPostChange","text","onPostChangeActionCreator","ArticlesContainer","setDefaultUseridThunk","router","match","setUserProfileThunk","params","userid","setTimeout","getUserStatusThunk","compose","withAuthRedirect","mapStateToProps","auth","Component","RedirectComponent","replace","to"],"sourceRoot":""}